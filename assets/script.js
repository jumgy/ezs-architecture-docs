// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Mermaid
mermaid.initialize({ 
    startOnLoad: false,
    theme: 'default',
    securityLevel: 'loose',
    flowchart: {
        useMaxWidth: true,
        htmlLabels: true
    }
});

// –î–∞–Ω–Ω—ã–µ –¥–∏–∞–≥—Ä–∞–º–º —Å —Ç–µ–≥–∞–º–∏ –∏ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞–º–∏
const diagramData = {
    overview: {
        title: "–ë–∏–∑–Ω–µ—Å-–æ–±–∑–æ—Ä —Å–∏—Å—Ç–µ–º—ã",
        tags: ["business", "management", "overview"],
        screenshots: ["app-overview.png", "main-screen.png"],
        mermaid: `
flowchart TD
    USER[üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å] --> MOBILE[üì± –ú–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ]
    MOBILE --> MAP[üó∫Ô∏è –ö–∞—Ä—Ç–∞ —Å—Ç–∞–Ω—Ü–∏–π]
    MOBILE --> SEARCH[üîç –ü–æ–∏—Å–∫]
    MAP --> CHARGING[‚ö° –ó–∞—Ä—è–¥–∫–∞]
    SEARCH --> STATION[üè¢ –°—Ç–∞–Ω—Ü–∏—è]
    STATION --> CHARGING
    
    classDef userStyle fill:#e74c3c,color:#fff
    classDef appStyle fill:#3498db,color:#fff
    classDef actionStyle fill:#2ecc71,color:#fff
    
    class USER userStyle
    class MOBILE,MAP,SEARCH appStyle
    class CHARGING,STATION actionStyle
    
    click MAP "#technical" "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –∫–∞—Ä—Ç—ã"
    click SEARCH "#technical" "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –ø–æ–∏—Å–∫–∞"
        `
    },
    
    technical: {
        title: "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞",
        tags: ["frontend", "backend", "api", "technical"],
        screenshots: ["architecture.png", "api-flow.png"],
        mermaid: `${YOUR_CURRENT_DIAGRAM}` // –ó–¥–µ—Å—å –≤—Å—Ç–∞–≤–∏—à—å —Å–≤–æ—é –¥–∏–∞–≥—Ä–∞–º–º—É
    },
    
    database: {
        title: "–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö",
        tags: ["database", "storage", "cache", "data"],
        screenshots: ["db-schema.png", "data-flow.png"],
        mermaid: `
erDiagram
    USERS {
        uuid id PK
        string email
        string name
        timestamp created_at
        json preferences
    }
    
    STATIONS {
        uuid id PK
        string name
        point location
        json connectors
        integer power_kw
        string status
        timestamp updated_at
    }
    
    CHARGING_SESSIONS {
        uuid id PK
        uuid user_id FK
        uuid station_id FK
        timestamp start_time
        timestamp end_time
        decimal energy_kwh
        decimal cost
        string status
    }
    
    FAVORITES {
        uuid user_id FK
        uuid station_id FK
        timestamp added_at
    }
    
    USERS ||--o{ CHARGING_SESSIONS : "–∑–∞—Ä—è–∂–∞–µ—Ç—Å—è"
    STATIONS ||--o{ CHARGING_SESSIONS : "–æ–±—Å–ª—É–∂–∏–≤–∞–µ—Ç"
    USERS ||--o{ FAVORITES : "–∏–∑–±—Ä–∞–Ω–Ω—ã–µ"
    STATIONS ||--o{ FAVORITES : "–≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º"
        `
    },
    
    "user-journey": {
        title: "User Journey",
        tags: ["ux", "flows", "screens", "user"],
        screenshots: ["user-flow.png", "wireframes.png"],
        mermaid: `
journey
    title –ü—É—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: –ü–æ–∏—Å–∫ –∏ –∑–∞—Ä—è–¥–∫–∞
    section –ü–æ–∏—Å–∫ —Å—Ç–∞–Ω—Ü–∏–∏
      –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: 5: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
      –ù–∞–π—Ç–∏ —Å—Ç–∞–Ω—Ü–∏—é –Ω–∞ –∫–∞—Ä—Ç–µ: 4: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
      –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å: 3: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –°–∏—Å—Ç–µ–º–∞
      –í—ã–±—Ä–∞—Ç—å —Å—Ç–∞–Ω—Ü–∏—é: 5: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    section –ó–∞—Ä—è–¥–∫–∞
      –°–∫–∞–Ω–∏—Ä–æ–≤–∞—Ç—å QR –∫–æ–¥: 4: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
      –ù–∞—á–∞—Ç—å –∑–∞—Ä—è–¥–∫—É: 5: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –°—Ç–∞–Ω—Ü–∏—è
      –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ—Ü–µ—Å—Å–∞: 4: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –°–∏—Å—Ç–µ–º–∞
      –ó–∞–≤–µ—Ä—à–∏—Ç—å –∑–∞—Ä—è–¥–∫—É: 5: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –°—Ç–∞–Ω—Ü–∏—è
    section –û–ø–ª–∞—Ç–∞
      –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —Å–µ—Å—Å–∏—é: 4: –°–∏—Å—Ç–µ–º–∞
      –ü—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –æ–ø–ª–∞—Ç—É: 3: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –ü–ª–∞—Ç–µ–∂–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞
      –ü–æ–ª—É—á–∏—Ç—å —á–µ–∫: 5: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        `
    }
};

// –ü–æ–∏—Å–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
const searchIndex = [
    { term: "–∫–∞—Ä—Ç–∞", level: "technical", description: "Yandex Maps –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è" },
    { term: "—Å—Ç–∞–Ω—Ü–∏—è", level: "database", description: "–¢–∞–±–ª–∏—Ü–∞ stations" },
    { term: "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", level: "user-journey", description: "User Journey" },
    { term: "api", level: "technical", description: "API Gateway –∏ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å—ã" },
    { term: "–±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö", level: "database", description: "–°—Ö–µ–º–∞ –ë–î" },
    { term: "–∑–∞—Ä—è–¥–∫–∞", level: "user-journey", description: "–ü—Ä–æ—Ü–µ—Å—Å –∑–∞—Ä—è–¥–∫–∏" }
];

// –¢–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å
let currentLevel = 'overview';

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
document.addEventListener('DOMContentLoaded', function() {
    loadDiagram('overview');
    setupEventListeners();
});

function setupEventListeners() {
    // –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —Ç–∞–±–∞–º
    document.querySelectorAll('.tab-btn').forEach(btn => {
        btn.addEventListener('click', (e) => {
            const level = e.target.dataset.level;
            setActiveTab(level);
            loadDiagram(level);
        });
    });
    
    // –ü–æ–∏—Å–∫
    const searchInput = document.getElementById('searchInput');
    const searchResults = document.getElementById('searchResults');
    
    searchInput.addEventListener('input', (e) => {
        const query = e.target.value.toLowerCase();
        if (query.length > 1) {
            const results = searchIndex.filter(item => 
                item.term.toLowerCase().includes(query) ||
                item.description.toLowerCase().includes(query)
            );
            showSearchResults(results);
        } else {
            searchResults.style.display = 'none';
        }
    });
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ–∏—Å–∫–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ–≥–æ
    document.addEventListener('click', (e) => {
        if (!e.target.closest('.search-container')) {
            searchResults.style.display = 'none';
        }
    });
}

function loadDiagram(level) {
    currentLevel = level;
    const container = document.getElementById('diagram-container');
    const data = diagramData[level];
    
    if (!data) return;
    
    // –ü–æ–∫–∞–∑–∞—Ç—å –∑–∞–≥—Ä—É–∑–∫—É
    container.innerHTML = '<div class="loading">–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∏–∞–≥—Ä–∞–º–º—ã...</div>';
    
    // –°–æ–∑–¥–∞—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –¥–ª—è –¥–∏–∞–≥—Ä–∞–º–º—ã
    const diagramId = `diagram-${Date.now()}`;
    
    setTimeout(() => {
        container.innerHTML = `<div class="mermaid" id="${diagramId}">${data.mermaid}</div>`;
        
        // –†–µ–Ω–¥–µ—Ä –¥–∏–∞–≥—Ä–∞–º–º—ã
        mermaid.init(undefined, `#${diagramId}`);
        
        // –û–±–Ω–æ–≤–∏—Ç—å –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
        updateMeta(data);
    }, 300);
}

function setActiveTab(level) {
    document.querySelectorAll('.tab-btn').forEach(btn => {
        btn.classList.remove('active');
    });
    document.querySelector(`[data-level="${level}"]`).classList.add('active');
}

function updateMeta(data) {
    // –û–±–Ω–æ–≤–∏—Ç—å —Ç–µ–≥–∏
    const tagsContainer = document.getElementById('current-tags');
    tagsContainer.innerHTML = data.tags.map(tag => 
        `<span class="tag ${tag}">${tag}</span>`
    ).join('');
    
    // –û–±–Ω–æ–≤–∏—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç—ã
    const screenshotsContainer = document.getElementById('related-screenshots');
    screenshotsContainer.innerHTML = data.screenshots.map(screenshot => 
        `<img src="assets/screenshots/${screenshot}" 
              alt="${screenshot}" 
              class="screenshot-thumb" 
              onclick="openScreenshot('${screenshot}')"
              onerror="this.style.display='none'">`
    ).join('');
}

function showSearchResults(results) {
    const container = document.getElementById('searchResults');
    
    if (results.length === 0) {
        container.style.display = 'none';
        return;
    }
    
    container.innerHTML = results.map(result => 
        `<div class="search-result" onclick="goToLevel('${result.level}')">
            <strong>${result.term}</strong>
            <br><small>${result.description}</small>
        </div>`
    ).join('');
    
    container.style.display = 'block';
}

function goToLevel(level) {
    setActiveTab(level);
    loadDiagram(level);
    document.getElementById('searchResults').style.display = 'none';
    document.getElementById('searchInput').value = '';
}

function openScreenshot(filename) {
    // –û—Ç–∫—Ä—ã—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ –∏–ª–∏ –Ω–æ–≤–æ–π –≤–∫–ª–∞–¥–∫–µ
    window.open(`assets/screenshots/${filename}`, '_blank');
}
